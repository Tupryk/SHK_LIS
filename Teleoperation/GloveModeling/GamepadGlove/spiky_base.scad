// Generated by SolidPython 1.1.3 on 2024-06-17 15:08:29
$fn = 48;


union() {
	scale(v = [10, 10, 10]) {
		union() {
			union() {
				union() {
					union() {
						union() {
							union() {
								cylinder(center = true, h = 0.7000000000, r = 1.5000000000);
								rotate(a = [-15.590190874801145, 0.0, 0.0000000000]) {
									translate(v = [0.0, 0.8, 1.2500000000]) {
										difference() {
											cylinder(center = true, h = 2.0000000000, r = 0.4000000000);
											cylinder(center = true, h = 4.0000000000, r = 0.1500000000);
										}
									}
								}
							}
							rotate(a = [-8.851406967463598, 15.331086586116108, 0.0000000000]) {
								translate(v = [0.6928203230275509, 0.40000000000000013, 1.2500000000]) {
									difference() {
										cylinder(center = true, h = 2.0000000000, r = 0.4000000000);
										cylinder(center = true, h = 4.0000000000, r = 0.1500000000);
									}
								}
							}
						}
						rotate(a = [10.86850509431109, 18.824803025667986, 0.0000000000]) {
							translate(v = [0.692820323027551, -0.3999999999999999, 1.2500000000]) {
								difference() {
									cylinder(center = true, h = 2.0000000000, r = 0.4000000000);
									cylinder(center = true, h = 4.0000000000, r = 0.1500000000);
								}
							}
						}
					}
					rotate(a = [22.845326855812214, 2.7977456409445495e-15, 0.0000000000]) {
						translate(v = [9.797174393178826e-17, -0.8, 1.2500000000]) {
							difference() {
								cylinder(center = true, h = 2.0000000000, r = 0.4000000000);
								cylinder(center = true, h = 4.0000000000, r = 0.1500000000);
							}
						}
					}
				}
				rotate(a = [10.408636544129932, -18.028287331951155, 0.0000000000]) {
					translate(v = [-0.6928203230275507, -0.40000000000000036, 1.2500000000]) {
						difference() {
							cylinder(center = true, h = 2.0000000000, r = 0.4000000000);
							cylinder(center = true, h = 4.0000000000, r = 0.1500000000);
						}
					}
				}
			}
			rotate(a = [-8.250851239173015, -14.290893551940316, 0.0000000000]) {
				translate(v = [-0.6928203230275513, 0.39999999999999947, 1.2500000000]) {
					difference() {
						cylinder(center = true, h = 2.0000000000, r = 0.4000000000);
						cylinder(center = true, h = 4.0000000000, r = 0.1500000000);
					}
				}
			}
		}
	}
}
/***********************************************
*********      SolidPython code:      **********
************************************************
 
#! /usr/bin/env python3
import sys
import numpy as np
from solid import scad_render_to_file, difference
from solid.objects import translate, union, rotate, cylinder, scale


SEGMENTS = 48
ball_count = 6

def basic_geometry():

    shapes = []
    base = cylinder(r=1.5, h=.7, center=True)
    
    step = np.pi*2/ball_count
    for i in range(ball_count):
        length = 2.
        inclination = 15. + np.random.random() * 10.
        pos = [np.sin(i*step)*.8, np.cos(i*step)*.8, length*.5+.25]
        rot = [-np.cos(i*step)*inclination, np.sin(i*step)*inclination, 0.]

        bar = cylinder(r=.4, h=length, center=True)
        bar_hole = cylinder(r=.15, h=length*2., center=True)
        bar = difference()(bar, bar_hole)
        bar = translate(pos)(bar)
        bar = rotate(rot)(bar)

        base = union()(base, bar)

    base = scale([10, 10, 10])(base)
    shapes.append(base)
    return union()(*shapes)

if __name__ == '__main__':
    out_dir = sys.argv[1] if len(sys.argv) > 1 else None

    a = basic_geometry()

    # Adding the file_header argument as shown allows you to change
    # the detail of arcs by changing the SEGMENTS variable.  This can
    # be expensive when making lots of small curves, but is otherwise
    # useful.
    file_out = scad_render_to_file(a, out_dir=out_dir, file_header=f'$fn = {SEGMENTS};')
    print(f"{__file__}: SCAD file written to: \n{file_out}")
 
 
************************************************/
