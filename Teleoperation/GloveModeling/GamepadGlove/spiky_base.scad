// Generated by SolidPython 1.1.3 on 2024-06-04 12:18:26
$fn = 48;


union() {
	scale(v = [10, 10, 10]) {
		union() {
			union() {
				union() {
					union() {
						union() {
							union() {
								cylinder(center = true, h = 0.5000000000, r = 1.1000000000);
								rotate(a = [-16.36697713766391, 0.0, 0.0000000000]) {
									translate(v = [0.0, 0.8, 3.3591048121]) {
										cylinder(center = true, h = 5.7182096242, r = 0.2500000000);
									}
								}
							}
							rotate(a = [-11.310087030161858, 19.589645374266127, 0.0000000000]) {
								translate(v = [0.6928203230275509, 0.40000000000000013, 7.3783371857]) {
									cylinder(center = true, h = 13.7566743714, r = 0.2500000000);
								}
							}
						}
						rotate(a = [11.47277605471023, 19.87143103061774, 0.0000000000]) {
							translate(v = [0.692820323027551, -0.3999999999999999, 6.1557787875]) {
								cylinder(center = true, h = 11.3115575750, r = 0.2500000000);
							}
						}
					}
					rotate(a = [17.465151060324665, 2.13886413426516e-15, 0.0000000000]) {
						translate(v = [9.797174393178826e-17, -0.8, 6.9817859347]) {
							cylinder(center = true, h = 12.9635718694, r = 0.2500000000);
						}
					}
				}
				rotate(a = [11.021898729535884, -19.090488595434987, 0.0000000000]) {
					translate(v = [-0.6928203230275507, -0.40000000000000036, 7.7444956393]) {
						cylinder(center = true, h = 14.4889912787, r = 0.2500000000);
					}
				}
			}
			rotate(a = [-8.470250990232257, -14.670905067942888, 0.0000000000]) {
				translate(v = [-0.6928203230275513, 0.39999999999999947, 4.7629732730]) {
					cylinder(center = true, h = 8.5259465460, r = 0.2500000000);
				}
			}
		}
	}
}
/***********************************************
*********      SolidPython code:      **********
************************************************
 
#! /usr/bin/env python3
import sys
import numpy as np
from solid import scad_render_to_file, difference
from solid.objects import cube, translate, union, rotate, cylinder, scale


SEGMENTS = 48
ball_count = 6

def basic_geometry():

    shapes = []
    base = cylinder(r=1.1, h=.5, center=True)
    
    step = np.pi*2/ball_count
    for i in range(ball_count):
        length = 5. + np.random.random() * 10.
        inclination = 15. + np.random.random() * 10.
        bar = cylinder(r=.25, h=length, center=True)
        bar = translate([np.sin(i*step)*.8, np.cos(i*step)*.8, length*.5+.5])(bar)
        bar = rotate([-np.cos(i*step)*inclination, np.sin(i*step)*inclination, 0.])(bar)
        base = union()(base, bar)

    base = scale([10, 10, 10])(base)
    shapes.append(base)
    return union()(*shapes)

if __name__ == '__main__':
    out_dir = sys.argv[1] if len(sys.argv) > 1 else None

    a = basic_geometry()

    # Adding the file_header argument as shown allows you to change
    # the detail of arcs by changing the SEGMENTS variable.  This can
    # be expensive when making lots of small curves, but is otherwise
    # useful.
    file_out = scad_render_to_file(a, out_dir=out_dir, file_header=f'$fn = {SEGMENTS};')
    print(f"{__file__}: SCAD file written to: \n{file_out}")
 
 
************************************************/
